#jinja2: lstrip_blocks: "True"
# {{ ansible_managed }}

{% if item.value.upstream is defined %}
upstream ups_{{ item.key }} {
  {{ item.value.upstream | indent(width=4) }}
}
{% endif %}

{{ item.value.pre_server | default("") }}

{% if (item.value.ssl_enabled | default("0")) == "1" %}
  {% if item.value.ssl_redirect == "1" %}
server {
  listen {{ item.value.http_port | default("80") }};
  server_name
    {{ item.value.server_name | indent(width=6) }}
  ;
  return 302 https://$host$request_uri;
}
  {% else %}
server {
  listen {{ item.value.http_port | default("80") }};
  server_name
    {{ item.value.server_name | indent(width=6) }}
  ;
  root {{ item.value.root | default(nginx_default_rootdir) }};

  {{ item.value.extra_opt | default("") }}

  {{ item.value.location_custom | default("") | indent(width=4) }}

  location / {
      # First attempt to serve request as file, then
      # as directory, then fall back to displaying a 404.
      try_files $uri /index.html;
  }

  # letencrypt support
  location ^~ /.well-known/acme-challenge/ {
    allow all;
    root /var/lib/letsencrypt/;
    default_type "text/plain";
    try_files $uri =404;
  }

  location = /favicon.ico { access_log off; log_not_found off; }
  location ~ /\. { deny  all; access_log off; log_not_found off; }

  error_page  404               /50x.html;
  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root   html;
  }

}
  {% endif %}

server {
  listen {{ item.value.ssl_port | default("443") }} ssl http2;
  server_name
    {{ item.value.server_name | indent(width=6) }}
  ;
  root {{ item.value.root | default(nginx_default_rootdir) }};

  ssl_certificate {{ item.value.ssl_certificate }};
  ssl_certificate_key {{ item.value.ssl_certificate_key }};
  ## verify chain of trust of OCSP response using Root CA and Intermediate certs
  ssl_trusted_certificate {{ item.value.ssl_trusted_certificate }};
  include conf.d/ssl.conf;

  {{ item.value.extra_opt | default("") }}

  {{ item.value.location_custom | default("") | indent(width=4) }}

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri /index.html;
  }

  # letencrypt support
  location ^~ /.well-known/acme-challenge/ {
    allow all;
    root /var/lib/letsencrypt/;
    default_type "text/plain";
    try_files $uri =404;
  }

  location = /favicon.ico { access_log off; log_not_found off; }
  location ~ /\. { deny  all; access_log off; log_not_found off; }

  error_page  404               /50x.html;
  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root   html;
  }
}

{% else %}
server {
  listen {{ item.value.http_port | default("80") }};
  server_name
    {{ item.value.server_name | indent(width=6) }}
  ;

  {{ item.value.extra_opt | default("") }}

  root {{ item.value.root | default(nginx_default_rootdir) }};

  {% if (item.value.ssl_redirect | default("0")) == "1" %}
  # AWS ELB/ALB https offloading
  if ($http_x_forwarded_proto != "https") {
    return 302 https://$host$request_uri;
  }
  {% endif -%}

  {{ item.value.location_custom | default("") | indent(width=4) }}

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri /index.html;
  }

  # letencrypt support
  location ^~ /.well-known/acme-challenge/ {
    allow all;
    root /var/lib/letsencrypt/;
    default_type "text/plain";
    try_files $uri =404;
  }

  location = /favicon.ico { access_log off; log_not_found off; }
  location ~ /\. { deny  all; access_log off; log_not_found off; }

  error_page  404               /50x.html;
  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root   html;
  }
}

{% endif %}
